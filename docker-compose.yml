services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: rent_app_php
        restart: unless-stopped
        volumes:
            - .:/var/www
        networks:
            - app-network
        depends_on:
            - postgres

    postgres:
        image: postgres
        container_name: rent_app_postgres
        restart: always
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network
        expose:
            - 5432

    pgadmin:
        image: dpage/pgadmin4
        container_name: rent_app_pgadmin
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - "8082:80"
        networks:
            - app-network

    web:
        container_name: web
        image: nginx:alpine  # Nginx image
        ports:
            - "80:80"  # Host port 9000 dan container port 80 ga
        volumes:
            - ./:/var/www  # Laravel ilovasini qo'shish
            - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Nginx konfiguratsiyasini qo'shish
        depends_on:
            - app  # PHP-FPM ishga tushishi uchun
        networks:
            - app-network  # Maxsus tarmoq

    node:
        container_name: rent_app_nodes
        image: node:20
        working_dir: /var/www
        volumes:
            - .:/var/www
        networks:
            - app-network  # Corrected network to use app-network
        command: bash -c "npm install && npm run build"
volumes:
    postgres_data:

networks:
    app-network:
        driver: bridge
